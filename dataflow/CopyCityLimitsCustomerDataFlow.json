{
	"name": "CopyCityLimitsCustomerDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DataLakeCsv",
						"type": "DatasetReference"
					},
					"name": "SalesData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DataLakeCSVOutput",
						"type": "DatasetReference"
					},
					"name": "OutputDistinctCustomers"
				}
			],
			"transformations": [
				{
					"name": "DistinctRows"
				},
				{
					"name": "SelectCustomerColumns"
				}
			],
			"script": "source(output(\n\t\t{Shipping Id} as short,\n\t\tCustomer as string,\n\t\tName as string,\n\t\t{Shipping Address 1} as string,\n\t\t{Shipping City} as string,\n\t\t{Shipping State} as string,\n\t\t{Shipping Zip} as string,\n\t\tPhone as string,\n\t\tProduct as string,\n\t\tMSRP as double,\n\t\tQuantity as short,\n\t\tTotal as double,\n\t\tDate as date 'MM/dd/yyyy'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SalesData\nSalesData aggregate(groupBy(Customer),\n\teach(match(name!='Customer'), $$ = first($$))) ~> DistinctRows\nDistinctRows select(mapColumn(\n\t\tCustomer,\n\t\tName,\n\t\t{Shipping Address 1},\n\t\t{Shipping City},\n\t\t{Shipping State},\n\t\t{Shipping Zip},\n\t\tPhone\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCustomerColumns\nSelectCustomerColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Transaction ID} as string,\n\t\tCustomer as string,\n\t\tName as string,\n\t\tZip as string,\n\t\tProduct as string,\n\t\tQuantity as string,\n\t\tTotal as string,\n\t\t{Discount Applied} as string,\n\t\t{Percent Discount} as string\n\t),\n\ttruncate: true,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('roundRobin', 4)) ~> OutputDistinctCustomers"
		}
	}
}