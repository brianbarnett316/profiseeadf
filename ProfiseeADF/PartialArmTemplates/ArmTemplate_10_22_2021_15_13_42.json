{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ProfiseeADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyTwoWheelsCustomerDataFlow_ToREST')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataLakeCsv",
								"type": "DatasetReference"
							},
							"name": "SalesData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Profisee_REST_API_Records_Upsert_copy1",
								"type": "DatasetReference"
							},
							"name": "OutputDistinctCustomers"
						}
					],
					"transformations": [
						{
							"name": "DistinctRows"
						},
						{
							"name": "SelectCustomerColumns"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\t{Transaction ID} as integer,\n\t\tCustomer as string,\n\t\tName as string,\n\t\tZip as string,\n\t\tProduct as string,\n\t\tMSRP as double,\n\t\tQuantity as short,\n\t\tTotal as double,\n\t\tDate as date 'MM/dd/yyyy'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SalesData\nSalesData aggregate(groupBy(Customer),\n\teach(match(name!='Customer'), $$ = first($$))) ~> DistinctRows\nDistinctRows select(mapColumn(\n\t\tCustomer,\n\t\tName,\n\t\tZip\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCustomerColumns\nSelectCustomerColumns derive({Source System} = 'Two Wheels') ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tinsertHttpMethod: 'PATCH',\n\ttimeout: 30,\n\theaders: ['x-api-key' -> '7cd70af83611405ea394c80d16535499'],\n\ttruncate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tTwoWheelsID = Customer,\n\t\tName,\n\t\tZip,\n\t\t{Source System}\n\t),\n\tpartitionBy('roundRobin', 4),\n\tpreCommands: [],\n\tpostCommands: []) ~> OutputDistinctCustomers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Profisee_REST_API_Records_Upsert_copy1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Profisee REST API No Auth Header')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "https://profvmmspurview.profisee.biz/profisee/rest/v1",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Profisee_REST_API_Records_Upsert_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Profisee REST API No Auth Header",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"entityId": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat(\n'records/',\ndataset().entityId, \n'/?isUpsert=true'\n)\n",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Profisee REST API No Auth Header')]"
			]
		}
	]
}