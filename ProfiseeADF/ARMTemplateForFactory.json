{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ProfiseeADF"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"ProfiseeDataLakeStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ProfiseeDataLakeStorage'"
		},
		"Salesforce1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Salesforce1'"
		},
		"Salesforce1_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'Salesforce1'"
		},
		"Profisee REST API No Auth Header_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://profvmmspurview.profisee.biz/profisee/rest/v1"
		},
		"Profisee REST API_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://profvmmspurview.profisee.biz/profisee/rest/v1"
		},
		"ProfiseeDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://profiseedatalake.dfs.core.windows.net"
		},
		"ProfiseeKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://ProfiseeKV.vault.azure.net/"
		},
		"ProfiseeRESTAPI_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://profvmmspurview.profisee.biz/profisee/rest/v1"
		},
		"Salesforce1_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://login.salesforce.com"
		},
		"Salesforce1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tye3950@yahoo.com"
		},
		"NewCityLimitsSalesCsv_properties_Copy City Limits Distinct Customer Data Flow_parameters_FolderName": {
			"type": "string",
			"defaultValue": "@triggerBody().FolderPath"
		},
		"NewCityLimitsSalesCsv_properties_Copy City Limits Distinct Customer Data Flow_parameters_FileName": {
			"type": "string",
			"defaultValue": "@triggerBody().FileName"
		},
		"NewCityLimitsSalesCsv_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/eace1b14-b39d-4d89-b619-ef42f13617cb/resourceGroups/EUS2-PurviewResources/providers/Microsoft.Storage/storageAccounts/profiseedatalake"
		},
		"NewSalesUploadCityLimitsCsv_properties_Copy City Limits Customers to Profisee_parameters_FolderName": {
			"type": "string",
			"defaultValue": "@triggerBody().FolderPath"
		},
		"NewSalesUploadCityLimitsCsv_properties_Copy City Limits Customers to Profisee_parameters_FileName": {
			"type": "string",
			"defaultValue": "@triggerBody().FileName"
		},
		"NewSalesUploadCityLimitsCsv_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/eace1b14-b39d-4d89-b619-ef42f13617cb/resourceGroups/EUS2-PurviewResources/providers/Microsoft.Storage/storageAccounts/profiseedatalake"
		},
		"NewSalesUploadTwoWheelsCsv_properties_Copy Two Wheels Customers to Profisee_parameters_FolderName": {
			"type": "string",
			"defaultValue": "@triggerBody().FolderPath"
		},
		"NewSalesUploadTwoWheelsCsv_properties_Copy Two Wheels Customers to Profisee_parameters_FileName": {
			"type": "string",
			"defaultValue": "@triggerBody().FileName"
		},
		"NewSalesUploadTwoWheelsCsv_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/eace1b14-b39d-4d89-b619-ef42f13617cb/resourceGroups/EUS2-PurviewResources/providers/Microsoft.Storage/storageAccounts/profiseedatalake"
		},
		"NewTwoWheelsSalesCsv_properties_Copy Two Wheels Distinct Customer Data Flow_parameters_FolderName": {
			"type": "string",
			"defaultValue": "@triggerBody().FolderPath"
		},
		"NewTwoWheelsSalesCsv_properties_Copy Two Wheels Distinct Customer Data Flow_parameters_FileName": {
			"type": "string",
			"defaultValue": "@triggerBody().FileName"
		},
		"NewTwoWheelsSalesCsv_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/eace1b14-b39d-4d89-b619-ef42f13617cb/resourceGroups/EUS2-PurviewResources/providers/Microsoft.Storage/storageAccounts/profiseedatalake"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copy City Limits Customers to Profisee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy City Limits Customers to Profisee",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Source System",
										"value": "City Limits"
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "RestSink",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": 10,
								"requestMethod": "PATCH",
								"writeBatchSize": 10000,
								"httpCompressionType": "none"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Customer",
											"type": "String"
										},
										"sink": {
											"path": "$['CityLimitsID']"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"path": "$['Name']"
										}
									},
									{
										"source": {
											"name": "Shipping Address 1",
											"type": "String"
										},
										"sink": {
											"path": "$['Address Line 1']"
										}
									},
									{
										"source": {
											"name": "Shipping City",
											"type": "String"
										},
										"sink": {
											"path": "$['City']"
										}
									},
									{
										"source": {
											"name": "Shipping State",
											"type": "String"
										},
										"sink": {
											"path": "$['State']"
										}
									},
									{
										"source": {
											"name": "Shipping Zip",
											"type": "String"
										},
										"sink": {
											"path": "$['Zip']"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String"
										},
										"sink": {
											"path": "$['Phone Number']"
										}
									},
									{
										"source": {
											"name": "Source System",
											"type": "String"
										},
										"sink": {
											"path": "$['Source System']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DataLakeCsv",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@pipeline().parameters.FolderName",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Profisee_REST_API_Records_Upsert",
								"type": "DatasetReference",
								"parameters": {
									"entityId": "Customer"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "City Limits"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-19T15:25:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataLakeCsv')]",
				"[concat(variables('factoryId'), '/datasets/Profisee_REST_API_Records_Upsert')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy City Limits Distinct Customer Data Flow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy City Limits Distinct Sales Customers",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CopyCityLimitsCustomerDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SalesData": {
										"FolderName": {
											"value": "@pipeline().parameters.FolderName",
											"type": "Expression"
										},
										"FileName": {
											"value": "@pipeline().parameters.FileName",
											"type": "Expression"
										}
									},
									"OutputDistinctCustomers": {
										"ContainerName": "sales-upload-to-profisee",
										"FolderName": "city-limits"
									}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "City Limits"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T17:02:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CopyCityLimitsCustomerDataFlow')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy Two Wheels Customers to Profisee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Customer info from Sales CSV to Profisee",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Source System",
										"value": "Two Wheels"
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "RestSink",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": 10,
								"requestMethod": "PATCH",
								"writeBatchSize": 10000,
								"httpCompressionType": "none"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Customer",
											"type": "String"
										},
										"sink": {
											"path": "$['TwoWheelsID']"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"path": "$['Name']"
										}
									},
									{
										"source": {
											"name": "Zip",
											"type": "String"
										},
										"sink": {
											"path": "$['Zip']"
										}
									},
									{
										"source": {
											"name": "Source System",
											"type": "String"
										},
										"sink": {
											"path": "$['Source System']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DataLakeCsv",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@pipeline().parameters.FolderName",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Profisee_REST_API_Records_Upsert",
								"type": "DatasetReference",
								"parameters": {
									"entityId": "Customer"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Two Wheels"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-19T15:25:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataLakeCsv')]",
				"[concat(variables('factoryId'), '/datasets/Profisee_REST_API_Records_Upsert')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy Two Wheels Distinct Customer Data Flow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Two Wheels Distinct Sales Customers",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CopyTwoWheelsCustomerDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SalesData": {
										"FolderName": {
											"value": "@pipeline().parameters.FolderName",
											"type": "Expression"
										},
										"FileName": {
											"value": "@pipeline().parameters.FileName",
											"type": "Expression"
										}
									},
									"OutputDistinctCustomers": {
										"ContainerName": "sales-upload-to-profisee",
										"FolderName": "two-wheels"
									}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Two Wheels"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T17:02:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CopyTwoWheelsCustomerDataFlow')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy Two Wheels Distinct Customer Data Flow_ToREST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Two Wheels Distinct Sales Customers",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CopyTwoWheelsCustomerDataFlow_ToREST",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SalesData": {
										"FolderName": {
											"value": "@pipeline().parameters.FolderName",
											"type": "Expression"
										},
										"FileName": {
											"value": "@pipeline().parameters.FileName",
											"type": "Expression"
										}
									},
									"OutputDistinctCustomers": {
										"entityId": "Customer"
									}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Two Wheels"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-20T17:02:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CopyTwoWheelsCustomerDataFlow_ToREST')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REST API direct to Salesforce')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "REST API to Salesforce Accounts",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "$.nextPage"
								}
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "upsert",
								"externalIdFieldName": "ProfiseeCode__c",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['code']"
										},
										"sink": {
											"name": "ProfiseeCode__c",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['address Line 1']"
										},
										"sink": {
											"name": "ShippingStreet",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['city']"
										},
										"sink": {
											"name": "ShippingCity",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['state']"
										},
										"sink": {
											"name": "ShippingState",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['zip']"
										},
										"sink": {
											"name": "ShippingPostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['phone Number']"
										},
										"sink": {
											"name": "Phone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['website']"
										},
										"sink": {
											"name": "Website",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['industry']"
										},
										"sink": {
											"name": "Industry",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "ProfiseeREST_API_Records_Get",
								"type": "DatasetReference",
								"parameters": {
									"entityId": {
										"value": "@pipeline().parameters.EntityName",
										"type": "Expression"
									},
									"pageSize": 100,
									"attributes": "[[Address Line 1],[City],[State],[Zip],[Phone Number],[Website],[Industry]",
									"filter": " ",
									"orderBy": " ",
									"dbaFormat": 1,
									"recordCodes": " 37b3523e-8378-47e8-8ac6-605da547a5c1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SalesforceAccount",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"EntityName": {
						"type": "string",
						"defaultValue": "Customer"
					}
				},
				"folder": {
					"name": "Salesforce"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-25T15:29:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ProfiseeREST_API_Records_Get')]",
				"[concat(variables('factoryId'), '/datasets/SalesforceAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesforce direct to REST API')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Salesforce Accounts to REST API",
						"description": "",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"additionalColumns": [
									{
										"name": "Source System",
										"value": {
											"value": "Salesforce",
											"type": "Expression"
										}
									}
								],
								"readBehavior": "query"
							},
							"sink": {
								"type": "RestSink",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": 10,
								"requestMethod": "PATCH",
								"writeBatchSize": 10000,
								"httpCompressionType": "none"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProfiseeCode__c"
										},
										"sink": {
											"path": "$['Code']"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"path": "$['Name']"
										}
									},
									{
										"source": {
											"name": "ShippingStreet",
											"type": "String"
										},
										"sink": {
											"path": "$['Address Line 1']"
										}
									},
									{
										"source": {
											"name": "ShippingCity",
											"type": "String"
										},
										"sink": {
											"path": "$['City']"
										}
									},
									{
										"source": {
											"name": "ShippingState",
											"type": "String"
										},
										"sink": {
											"path": "$['State']"
										}
									},
									{
										"source": {
											"name": "ShippingPostalCode",
											"type": "String"
										},
										"sink": {
											"path": "$['Zip']"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String"
										},
										"sink": {
											"path": "$['Phone Number']"
										}
									},
									{
										"source": {
											"name": "Website",
											"type": "String"
										},
										"sink": {
											"path": "$['Website']"
										}
									},
									{
										"source": {
											"name": "Industry",
											"type": "String"
										},
										"sink": {
											"path": "$['Industry']"
										}
									},
									{
										"source": {
											"name": "Source System"
										},
										"sink": {
											"path": "$['Source System']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceAccount",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Profisee_REST_API_Records_Upsert",
								"type": "DatasetReference",
								"parameters": {
									"entityId": "Customer"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Salesforce"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-25T16:03:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceAccount')]",
				"[concat(variables('factoryId'), '/datasets/Profisee_REST_API_Records_Upsert')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLakeCSVOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ProfiseeDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string"
					},
					"FolderName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Transaction ID",
						"type": "String"
					},
					{
						"name": "Customer",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Zip",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Total",
						"type": "String"
					},
					{
						"name": "Discount Applied",
						"type": "String"
					},
					{
						"name": "Percent Discount",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ProfiseeDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLakeCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ProfiseeDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ProfiseeDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProfiseeREST_API_Records_Get')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Profisee records get REST API call.",
				"linkedServiceName": {
					"referenceName": "Profisee REST API",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"entityId": {
						"type": "string"
					},
					"pageSize": {
						"type": "int",
						"defaultValue": 1000
					},
					"attributes": {
						"type": "string",
						"defaultValue": " "
					},
					"filter": {
						"type": "string",
						"defaultValue": " "
					},
					"orderBy": {
						"type": "string",
						"defaultValue": " "
					},
					"dbaFormat": {
						"type": "int",
						"defaultValue": 1
					},
					"recordCodes": {
						"type": "string",
						"defaultValue": " "
					}
				},
				"folder": {
					"name": "Profisee REST API"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat(\n'records/',\ndataset().entityId, \n'/?pageSize=', string(dataset().pageSize),\n'&attributes=', dataset().attributes,\n'&filter=', dataset().filter,\n'&orderBy=', dataset().orderBy,\n'&recordCodes=', dataset().recordCodes,\n'&dbaFormat=', string(dataset().dbaFormat)\n)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Profisee REST API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Profisee_REST_API_Records_Upsert')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Profisee REST API",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"entityId": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat(\n'records/',\ndataset().entityId, \n'/?isUpsert=true'\n)\n",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Profisee REST API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Profisee_REST_API_Records_Upsert_NoAuth')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Profisee REST API No Auth Header",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"entityId": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat(\n'records/',\ndataset().entityId, \n'/?isUpsert=true'\n)\n",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Profisee REST API No Auth Header')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesforceAccount')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Salesforce1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "Account"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Salesforce1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Profisee REST API No Auth Header')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Profisee REST API No Auth Header_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Profisee REST API')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Profisee REST API_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous",
					"authHeaders": {
						"X-API-Key": {
							"type": "AzureKeyVaultSecret",
							"store": {
								"referenceName": "ProfiseeKeyVault",
								"type": "LinkedServiceReference"
							},
							"secretName": "profisee-rest-api-key"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ProfiseeKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProfiseeDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ProfiseeDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ProfiseeDataLakeStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProfiseeKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ProfiseeKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProfiseeRESTAPI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ProfiseeRESTAPI_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous",
					"authHeaders": {
						"X-API-Key": {
							"type": "AzureKeyVaultSecret",
							"store": {
								"referenceName": "ProfiseeKeyVault",
								"type": "LinkedServiceReference"
							},
							"secretName": "profisee-rest-api-key"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ProfiseeKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesforce1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('Salesforce1_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('Salesforce1_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Salesforce1_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('Salesforce1_securityToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NewCityLimitsSalesCsv')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy City Limits Distinct Customer Data Flow",
							"type": "PipelineReference"
						},
						"parameters": {
							"FolderName": "[parameters('NewCityLimitsSalesCsv_properties_Copy City Limits Distinct Customer Data Flow_parameters_FolderName')]",
							"FileName": "[parameters('NewCityLimitsSalesCsv_properties_Copy City Limits Distinct Customer Data Flow_parameters_FileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/city-limits/blobs/",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('NewCityLimitsSalesCsv_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy City Limits Distinct Customer Data Flow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NewSalesUploadCityLimitsCsv')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy City Limits Customers to Profisee",
							"type": "PipelineReference"
						},
						"parameters": {
							"FolderName": "[parameters('NewSalesUploadCityLimitsCsv_properties_Copy City Limits Customers to Profisee_parameters_FolderName')]",
							"FileName": "[parameters('NewSalesUploadCityLimitsCsv_properties_Copy City Limits Customers to Profisee_parameters_FileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/sales-upload-to-profisee/blobs/city-limits",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('NewSalesUploadCityLimitsCsv_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy City Limits Customers to Profisee')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NewSalesUploadTwoWheelsCsv')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy Two Wheels Customers to Profisee",
							"type": "PipelineReference"
						},
						"parameters": {
							"FolderName": "[parameters('NewSalesUploadTwoWheelsCsv_properties_Copy Two Wheels Customers to Profisee_parameters_FolderName')]",
							"FileName": "[parameters('NewSalesUploadTwoWheelsCsv_properties_Copy Two Wheels Customers to Profisee_parameters_FileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/sales-upload-to-profisee/blobs/two-wheels",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('NewSalesUploadTwoWheelsCsv_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy Two Wheels Customers to Profisee')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NewTwoWheelsSalesCsv')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy Two Wheels Distinct Customer Data Flow",
							"type": "PipelineReference"
						},
						"parameters": {
							"FolderName": "[parameters('NewTwoWheelsSalesCsv_properties_Copy Two Wheels Distinct Customer Data Flow_parameters_FolderName')]",
							"FileName": "[parameters('NewTwoWheelsSalesCsv_properties_Copy Two Wheels Distinct Customer Data Flow_parameters_FileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/two-wheels/blobs/",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('NewTwoWheelsSalesCsv_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy Two Wheels Distinct Customer Data Flow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 240,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyCityLimitsCustomerDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataLakeCsv",
								"type": "DatasetReference"
							},
							"name": "SalesData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataLakeCSVOutput",
								"type": "DatasetReference"
							},
							"name": "OutputDistinctCustomers"
						}
					],
					"transformations": [
						{
							"name": "DistinctRows"
						},
						{
							"name": "SelectCustomerColumns"
						}
					],
					"script": "source(output(\n\t\t{Shipping Id} as short,\n\t\tCustomer as string,\n\t\tName as string,\n\t\t{Shipping Address 1} as string,\n\t\t{Shipping City} as string,\n\t\t{Shipping State} as string,\n\t\t{Shipping Zip} as string,\n\t\tPhone as string,\n\t\tProduct as string,\n\t\tMSRP as double,\n\t\tQuantity as short,\n\t\tTotal as double,\n\t\tDate as date 'MM/dd/yyyy'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SalesData\nSalesData aggregate(groupBy(Customer),\n\teach(match(name!='Customer'), $$ = first($$))) ~> DistinctRows\nDistinctRows select(mapColumn(\n\t\tCustomer,\n\t\tName,\n\t\t{Shipping Address 1},\n\t\t{Shipping City},\n\t\t{Shipping State},\n\t\t{Shipping Zip},\n\t\tPhone\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCustomerColumns\nSelectCustomerColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Transaction ID} as string,\n\t\tCustomer as string,\n\t\tName as string,\n\t\tZip as string,\n\t\tProduct as string,\n\t\tQuantity as string,\n\t\tTotal as string,\n\t\t{Discount Applied} as string,\n\t\t{Percent Discount} as string\n\t),\n\ttruncate: true,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('roundRobin', 4)) ~> OutputDistinctCustomers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataLakeCsv')]",
				"[concat(variables('factoryId'), '/datasets/DataLakeCSVOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyTwoWheelsCustomerDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataLakeCsv",
								"type": "DatasetReference"
							},
							"name": "SalesData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataLakeCSVOutput",
								"type": "DatasetReference"
							},
							"name": "OutputDistinctCustomers"
						}
					],
					"transformations": [
						{
							"name": "DistinctRows"
						},
						{
							"name": "SelectCustomerColumns"
						}
					],
					"script": "source(output(\n\t\t{Transaction ID} as integer,\n\t\tCustomer as string,\n\t\tName as string,\n\t\tZip as string,\n\t\tProduct as string,\n\t\tMSRP as double,\n\t\tQuantity as short,\n\t\tTotal as double,\n\t\tDate as date 'MM/dd/yyyy'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SalesData\nSalesData aggregate(groupBy(Customer),\n\teach(match(name!='Customer'), $$ = first($$))) ~> DistinctRows\nDistinctRows select(mapColumn(\n\t\tCustomer,\n\t\tName,\n\t\tZip\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCustomerColumns\nSelectCustomerColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Transaction ID} as string,\n\t\tCustomer as string,\n\t\tName as string,\n\t\tZip as string,\n\t\tProduct as string,\n\t\tQuantity as string,\n\t\tTotal as string,\n\t\t{Discount Applied} as string,\n\t\t{Percent Discount} as string\n\t),\n\ttruncate: true,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('roundRobin', 4)) ~> OutputDistinctCustomers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataLakeCsv')]",
				"[concat(variables('factoryId'), '/datasets/DataLakeCSVOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyTwoWheelsCustomerDataFlow_ToREST')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataLakeCsv",
								"type": "DatasetReference"
							},
							"name": "SalesData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Profisee_REST_API_Records_Upsert_NoAuth",
								"type": "DatasetReference"
							},
							"name": "OutputDistinctCustomers"
						}
					],
					"transformations": [
						{
							"name": "DistinctRows"
						},
						{
							"name": "SelectCustomerColumns"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\t{Transaction ID} as integer,\n\t\tCustomer as string,\n\t\tName as string,\n\t\tZip as string,\n\t\tProduct as string,\n\t\tMSRP as double,\n\t\tQuantity as short,\n\t\tTotal as double,\n\t\tDate as date 'MM/dd/yyyy'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SalesData\nSalesData aggregate(groupBy(Customer),\n\teach(match(name!='Customer'), $$ = first($$))) ~> DistinctRows\nDistinctRows select(mapColumn(\n\t\tCustomer,\n\t\tName,\n\t\tZip\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCustomerColumns\nSelectCustomerColumns derive({Source System} = 'Two Wheels') ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tinsertHttpMethod: 'PATCH',\n\tdeleteHttpMethod: 'DELETE',\n\tupsertHttpMethod: 'PUT',\n\tupdateHttpMethod: 'PATCH',\n\ttimeout: 30,\n\trequestInterval: 0,\n\theaders: ['x-api-key' -> '7cd70af83611405ea394c80d16535499'],\n\trequestFormat: ['type' -> 'json'],\n\ttruncate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tTwoWheelsID = Customer,\n\t\tName,\n\t\tZip,\n\t\t{Source System}\n\t),\n\tpartitionBy('roundRobin', 4),\n\tpreCommands: [],\n\tpostCommands: []) ~> OutputDistinctCustomers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataLakeCsv')]",
				"[concat(variables('factoryId'), '/datasets/Profisee_REST_API_Records_Upsert_NoAuth')]"
			]
		}
	]
}